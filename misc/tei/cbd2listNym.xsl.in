<xsl:stylesheet version="1.0" 
		xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
		xmlns:xl="http://www.w3.org/1999/xlink"
		xmlns:tei="http://www.tei-c.org/ns/1.0"
		xmlns="http://www.tei-c.org/ns/1.0"
		xmlns:c="http://oracc.org/ns/cbd/1.0"
		xmlns:oracc="http://oracc.org/ns/oracc/1.0"
		exclude-result-prefixes="c">

<!-- @SUMMARY@= Create TEI &lt;listNym> from Corpus-Based Dictionary -->

<xsl:param name="version" select="1.0"/>
<xsl:output method="xml" indent="yes" encoding="utf-8"/>
<xsl:key name="nyms" match="c:cf" use="text()"/>
<xsl:template match="/">
  <xsl:param name="datestamp" 
	     select="document('http://@@ORACC_HOST@@/datestamp')/*"/>
  <TEI>
    <teiHeader>
      <fileDesc>
	<titleStmt>
	  <title>TEI listNym from <xsl:value-of select="$project"/>/lib/qpn.glo</title>
	  <respStmt>
	    <resp>generated by</resp>
	    <name type="program">cbd2listNym.xsl 1.0</name>
	  </respStmt>
	</titleStmt>
	<publicationStmt>
	  <availability><p>Electronic manuscript</p></availability>
	  <date><xsl:value-of select="$datestamp"/></date>
	</publicationStmt>
	<sourceDesc>
	  <p>This is a nymList derived programmatically from the 
	  project's proper noun glossary (lib/qpn.glo)</p>
	</sourceDesc>
      </fileDesc>
    </teiHeader>
    <text type="listNym">
      <body>
	<listNym>
	  <xsl:apply-templates/>
	</listNym>
      </body>
    </text>
  </TEI>
</xsl:template>

<xsl:template match="c:cf[../c:pos='PN' or ../c:pos='RN']">
  <xsl:if test="generate-id()=generate-id(key('nyms',text()))">
    <nym>
      <xsl:attribute name="xml:id">
	<xsl:value-of select="concat('nym.',generate-id())"/>
      </xsl:attribute>
      <xsl:if test="ancestor::c:entry/@icount">
	<xsl:attribute name="oracc:icount">
	  <xsl:value-of select="ancestor::c:entry/@icount"/>
	</xsl:attribute>
      </xsl:if>
      <form norm="{text()}">
	<xsl:for-each select="../c:forms/c:form">
	  <orth>
	    <xsl:attribute name="xml:id">
	      <xsl:value-of select="concat('nym.',generate-id())"/>
	    </xsl:attribute>
	    <xsl:if test="@icount">
	      <xsl:attribute name="oracc:icount">
		<xsl:value-of select="@icount"/>
	      </xsl:attribute>
	    </xsl:if>
	    <xsl:value-of select="@n"/>
	  </orth>
	</xsl:for-each>
      </form>
    </nym>
  </xsl:if>
</xsl:template>

<xsl:template match="text()"/>

</xsl:stylesheet>
