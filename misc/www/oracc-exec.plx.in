#!/usr/bin/perl
use warnings; use strict; use open 'utf8';
binmode STDERR, ':utf8'; binmode STDIN, ':utf8'; binmode STDOUT, ':utf8';

sub xsystem;
my $verbose = 1;

warn "oracc-exec: @ARGV\n";
my($session,$request_zip,$command,@args) = @ARGV;

my $tmpdir = "@@ORACC@@/tmp/sop/$session";
chdir($tmpdir);
warn "oracc_exec: pwd=",`pwd`;

my $oraccbin = '@@ORACC@@/bin';
my $oracc_log = "$tmpdir/oracc.log";
my $request_log = "$tmpdir/request.log";
my $status_file = "$tmpdir/status";
my $zip_response = "$tmpdir/response.zip";

my @zippers = ($request_log, $oracc_log);

set_status('run');

if ($command eq 'atf') {
    xsystem 'unzip', $request_zip;
    xsystem "$oraccbin/ox", '-l', $oracc_log, '-c', $args[0];
} else {
    sleep(60);
}

zip_response();

set_status('done');

######################################################################################

sub
set_status {
    open(S,">$status_file");
    print S $_[0];
    close(S);
}

sub
xsystem {
    warn "xsystem @_\n" if $verbose;
    system @_;
}

sub
zip_response {
    unlink($zip_response);
    -s $oracc_log || system 'touch', $oracc_log;
    xsystem 'zip', '-j', $zip_response, @zippers;
}

1;
